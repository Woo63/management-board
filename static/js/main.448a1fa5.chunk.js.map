{"version":3,"sources":["components/CloseButton/CloseButton.js","components/Ticket/Ticket.js","components/Table/Table.js","components/NewTicket/NewTicket.js","containers/Board.js","withDataFetching.js","components/Header/Header.js","containers/App.js","serviceWorker.js","index.js"],"names":["Button","styled","button","CloseButton","onHandler","type","className","onClick","TicketWrapper","div","props","marginRight","Title","h4","Body","p","Ticket","ticket","onDragStart","onRemove","draggable","e","id","title","body","TableWrapper","Alert","Table","loading","error","tickets","onDragOver","onDrop","tableId","map","item","key","Container","form","NewTicket","state","lane","onChangeTitle","bind","onChangeBody","onSubmit","event","this","trim","length","preventDefault","postTicket","onShowForm","setState","alert","target","value","name","onChange","placeholder","Component","BoardWrapper","url","process","withDataFetching","WrappedComponent","WithDataFetching","data","fetch","res","json","dataJSON","payload","Object","keys","message","React","displayName","dataTransfer","setData","laneId","a","getData","indexId","findIndex","method","JSON","stringify","arr","index","splice","push","then","prevProps","Error","tables","CSSTransition","in","showForm","classNames","timeout","unmountOnExit","filter","HeaderWrapper","TitleWrapper","ImgWrapper","img","AddButton","Header","src","alt","App","parse","sessionStorage","getItem","setItem","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","document","getElementById","URL","href","origin","addEventListener","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.448a1fa5.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from 'styled-components';\r\n\r\nconst Button=styled.button`\r\n    background:none;\r\n    border:none;\r\n    float:right;\r\n    font-size: 1.2rem;\r\n    line-height: 1;\r\n    margin-bottom:5px;\r\n`;\r\n\r\nconst CloseButton=({onHandler})=>{\r\n    return(\r\n        <Button\r\n            type=\"button\"\r\n            className=\"btn btn-light btn-sm\"\r\n            onClick={onHandler}\r\n        >\r\n            &times;\r\n        </Button>\r\n    )\r\n}\r\n\r\nexport default CloseButton;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport CloseButton from \"../CloseButton/CloseButton\";\r\n\r\n\r\nconst TicketWrapper=styled.div`\r\n    border-top: 1px solid #9b9d9e;\r\n    padding: 15px;    \r\n    text-align: left;\r\n    &:not(:last-child) {\r\n        margin-bottom: 5%;\r\n        margin-right: ${props => !!props.marginRight ? '1%' : '0'};\r\n    }\r\n`;\r\nconst Title=styled.h4`\r\n    text-align: center;    \r\n    padding:2%;\r\n    font-size: 1.2rem;\r\n`;\r\nconst Body=styled.p`\r\n    width: 100%;\r\n`;\r\n\r\nconst Ticket=({ticket, marginRight, onDragStart, onRemove})=>{\r\n    return (\r\n\r\n        <TicketWrapper\r\n            draggable={true}\r\n            onDragStart={e => onDragStart && onDragStart(e, ticket.id)}\r\n            marginRight={marginRight}\r\n        >\r\n            <CloseButton onHandler={()=>onRemove(ticket.id)}/>\r\n            <Title>{ticket.title}</Title>\r\n            <Body>{ticket.body}</Body>\r\n        </TicketWrapper>\r\n    )\r\n}\r\n\r\nexport default Ticket;","import React from \"react\";\r\nimport styled from 'styled-components';\r\nimport Ticket from \"../Ticket/Ticket\";\r\n\r\nconst TableWrapper=styled.div`\r\n    background: linear-gradient(to top left, powderblue, pink);      \r\n    padding-top:15px;\r\n    border-radius: 10px;\r\n    padding:10px;\r\n    box-shadow: 0 14px 28px rgba(0,0,0,0.25), 0 10px 10px rgba(0,0,0,0.22);\r\n    min-height: 50vh;\r\n    width: 20vw;\r\n    \r\n    @media (max-width: 768px) {\r\n        margin-bottom: 5%;\r\n    }\r\n    \r\n`;\r\n\r\nconst Alert=styled.div`\r\n    text-align: center;\r\n`;\r\n\r\nconst Table=({loading, error, title, tickets, onDragStart, onDragOver, onDrop, tableId, onRemove})=>{\r\n    return(\r\n        <TableWrapper\r\n            onDragOver={e => onDragOver(e)}\r\n            onDrop={e => onDrop(e, tableId)}\r\n        >\r\n            <p>{title}</p>\r\n            {(loading || error) && <Alert>{loading ? 'Loading...' : error}</Alert>}\r\n            {tickets.map(item=>(\r\n                <Ticket key={item.id} onDragStart={onDragStart} ticket={item} onRemove={onRemove} />\r\n            ))}\r\n        </TableWrapper>\r\n    )\r\n};\r\n\r\nexport default Table;\r\n\r\n","import React, {Component} from 'react';\r\nimport styled from \"styled-components\";\r\nimport CloseButton from \"../CloseButton/CloseButton\";\r\n\r\nconst Container=styled.form`\r\n    background: linear-gradient(to top left, powderblue, pink);      \r\n    border-radius: 10px;\r\n    box-shadow: 0 14px 28px rgba(0,0,0,0.25), 0 10px 10px rgba(0,0,0,0.22);\r\n    padding: 10px 20px 20px;\r\n    width:30%;\r\n    min-width:250px;\r\n    margin: 2% auto;\r\n    \r\n`;\r\n\r\nclass NewTicket extends Component{\r\n    constructor() {\r\n        super();\r\n        this.state={\r\n            title:'',\r\n            body:'',\r\n            lane:1\r\n        }\r\n        this.onChangeTitle = this.onChangeTitle.bind(this);\r\n        this.onChangeBody = this.onChangeBody.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onSubmit(event){\r\n        if(this.state.title.trim().length&&this.state.body.trim().length){\r\n            event.preventDefault();\r\n            this.props.postTicket(this.state)\r\n            this.props.onShowForm()\r\n            this.setState({\r\n                title:'',\r\n                body:'',\r\n            })\r\n            alert(`${this.state.title} added!`);\r\n        } else {\r\n            alert(`Error added!`);\r\n        }\r\n\r\n    }\r\n\r\n    onChangeBody(event){\r\n        this.setState({body: event.target.value});\r\n    }\r\n\r\n    onChangeTitle(event) {\r\n        this.setState({title: event.target.value});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container onSubmit={this.onSubmit}>\r\n                <CloseButton onHandler={()=>this.props.onShowForm()}/>\r\n                <div className=\"form-group\">\r\n                    <input className=\"form-control\" type=\"text\" name=\"title\" value={this.state.title}\r\n                           onChange={this.onChangeTitle} placeholder=\"Title\"/>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <textarea className=\"form-control\" name=\"body\" value={this.state.body}\r\n                              onChange={this.onChangeBody} placeholder=\"Comment\"/>\r\n                </div>\r\n                <input className=\"btn btn-outline-secondary\" type=\"submit\" value=\"Submit\"/>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NewTicket;","import React from \"react\";\r\nimport styled from 'styled-components';\r\nimport Table from \"../components/Table/Table\";\r\nimport withDataFetching from \"../withDataFetching\";\r\nimport NewTicket from \"../components/NewTicket/NewTicket\";\r\nimport '../index.css'\r\nimport {CSSTransition} from \"react-transition-group\";\r\n\r\n\r\nconst BoardWrapper=styled.div`\r\n    display:flex;\r\n    flex-direction:row;\r\n    justify-content: space-between;\r\n    margin:20px 0px 30px;\r\n    flex-wrap:wrap;\r\n    padding:0 15px;\r\n`;\r\n\r\n\r\nconst url = process.env.REACT_APP_DB_URL\r\n\r\nclass Board extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            tickets: []\r\n        };\r\n        this.onDragOver = this.onDragOver.bind(this);\r\n        this.onDrop = this.onDrop.bind(this);\r\n        this.postTicket = this.postTicket.bind(this);\r\n        this.onRemove = this.onRemove.bind(this);\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.data !== this.props.data) {\r\n            this.setState({ tickets: this.props.data});\r\n        }\r\n    }\r\n\r\n    onDragStart = (e, id) => {\r\n        e.dataTransfer.setData('id', id);\r\n    };\r\n    onDragOver = e => {\r\n        e.preventDefault();\r\n    };\r\n    onDrop = async (e, laneId) => {\r\n        const id = e.dataTransfer.getData('id');\r\n        let indexId=this.state.tickets.findIndex(item=> item.id===id);\r\n        const ticket={\r\n            title:this.state.tickets[indexId].title,\r\n            body:this.state.tickets[indexId].body,\r\n            lane:laneId\r\n        }\r\n        let res = await fetch(`${url}/tickets.json`,{method:'POST',body: JSON.stringify(ticket)})\r\n        const dataJSON = await res.json();\r\n        ticket.id=dataJSON.name;\r\n        let arr=this.state.tickets;\r\n        const index=arr.findIndex(item=> item.id===id);\r\n        arr.splice(index,1);\r\n        arr.push(ticket)\r\n        this.setState({tickets:arr})\r\n        fetch(`${url}/tickets/${id}.json`, {\r\n            method: 'delete'\r\n        }).then(res=>res.json());\r\n    };\r\n    async postTicket(ticket){\r\n        try {\r\n            let res = await fetch(`${url}/tickets.json`,{method:'POST',body: JSON.stringify(ticket)});\r\n            const dataJSON = await res.json();\r\n            const payload={\r\n                ...ticket,\r\n                id:dataJSON.name\r\n            }\r\n\r\n            let data=this.state.tickets;\r\n            data.push(payload)\r\n            if (dataJSON) {\r\n                this.setState({tickets:data})\r\n            }\r\n        } catch (e) {\r\n            throw new Error(e.message)\r\n        }\r\n\r\n    };\r\n    async onRemove(id) {\r\n        await fetch(`${url}/tickets/${id}.json`, {\r\n            method: 'delete'\r\n        })\r\n        let arr=this.state.tickets;\r\n        const index=arr.findIndex(item=> item.id===id);\r\n        arr.splice(index,1)\r\n        this.setState({tickets:arr})\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        const {tables, loading, error} = this.props;\r\n        return (\r\n            <>\r\n                <CSSTransition\r\n                    in={this.props.showForm}\r\n                    classNames='form'\r\n                    timeout={500}\r\n                    unmountOnExit\r\n                >\r\n                    <NewTicket className=\"item\" postTicket={this.postTicket} onShowForm={this.props.onShowForm}/>\r\n                </CSSTransition>\r\n                <BoardWrapper>\r\n                    {\r\n                        tables.map(item => (\r\n                            <Table\r\n                                key={item.id}\r\n                                tableId={item.id}\r\n                                title={item.title}\r\n                                loading={loading}\r\n                                error={error}\r\n                                onDragStart={this.onDragStart}\r\n                                onDragOver={this.onDragOver}\r\n                                onDrop={this.onDrop}\r\n                                tickets={this.state.tickets.filter(ticket => ticket.lane === item.id)}\r\n                                onRemove={this.onRemove}\r\n                            />\r\n                        ))\r\n                    }\r\n                </BoardWrapper>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withDataFetching(Board);","import React from 'react';\r\n\r\n\r\nconst url = process.env.REACT_APP_DB_URL\r\nexport default function withDataFetching(WrappedComponent) {\r\n    class WithDataFetching extends React.Component {\r\n        constructor() {\r\n            super();\r\n            this.state = {\r\n                data: [],\r\n                loading: true,\r\n                error: ''\r\n            }\r\n        }\r\n        async componentDidMount() {\r\n            try {\r\n                const res = await fetch(`${url}/tickets.json`);\r\n                const dataJSON = await res.json();\r\n                const payload = Object.keys(dataJSON).map(key => {\r\n                    return {\r\n                        ...dataJSON[key],\r\n                        id: key\r\n                    }\r\n                })\r\n                if (dataJSON) {\r\n                    this.setState({\r\n                        data: payload,\r\n                        loading: false\r\n                    });\r\n                }\r\n            } catch(error) {\r\n                this.setState({\r\n                    loading: false,\r\n                    error: error.message,\r\n                });\r\n            }\r\n        }\r\n\r\n        render() {\r\n            const { data, loading, error } = this.state;\r\n            return (\r\n                <WrappedComponent\r\n                    data={data}\r\n                    loading={loading}\r\n                    error={error}\r\n                    {...this.props}\r\n                />\r\n            );\r\n        }\r\n    }\r\n    WithDataFetching.displayName = `WithDataFetching(${WrappedComponent.name})`;\r\n    return WithDataFetching;\r\n}","import React from \"react\";\r\nimport styled from 'styled-components';\r\n\r\nconst HeaderWrapper=styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: center;    \r\n    align-items: center;\r\n    background-color: #71babf;\r\n`\r\nconst TitleWrapper=styled.p`\r\n    color: white;\r\n    font-size: calc(10px + 3vmin);\r\n    height:64px;    \r\n    letter-spacing: 5px;\r\n    text-shadow: 0 3px 3px rgba(0,0,0,0.25), 0 2px 2px rgba(0,0,0,0.22);\r\n    padding-top:22px;\r\n    font-weight: bold;\r\n`;\r\nconst ImgWrapper=styled.img`\r\n    margin: auto;\r\n    width: 100%;\r\n    height: auto;\r\n`;\r\nconst AddButton = styled.div`\r\n    cursor: pointer;\r\n    padding: 2px;\r\n    margin-left: 20px;\r\n    width: 50px;\r\n    height: 50px;\r\n    border-radius: 50%;\r\n    background: rgba(217, 158, 187, 0.89);\r\n    opacity: 0.5;\r\n    box-shadow: 8px 8px 15px rgba(0,0,0,0.5);\r\n`;\r\n\r\nconst Header = ({title, onShowForm}) => {\r\n    return(\r\n        <HeaderWrapper>\r\n            <TitleWrapper>{title}</TitleWrapper>\r\n            <AddButton onClick={onShowForm}>\r\n                <ImgWrapper src={\"../../assets/plus.png\"} alt={\"not found\"}/>\r\n            </AddButton>\r\n        </HeaderWrapper>\r\n    )\r\n};\r\n\r\nexport default Header;","import React, {Component} from 'react';\r\nimport './App.css';\r\nimport Board from \"./Board\";\r\nimport Header from \"../components/Header/Header\";\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            showForm: JSON.parse(sessionStorage.getItem('showForm'))||false\r\n        };\r\n        this.onShowForm=this.onShowForm.bind(this);\r\n    }\r\n    onShowForm(){\r\n        sessionStorage.setItem('showForm', !this.state.showForm)\r\n        this.setState({showForm:!this.state.showForm})\r\n    }\r\n\r\n    render() {\r\n        const tables = [\r\n            {id: 1, title: 'TO DO'},\r\n            {id: 2, title: 'ACTIVE'},\r\n            {id: 3, title: 'REVIEW'},\r\n            {id: 4, title: 'DONE'}\r\n        ]\r\n        return (\r\n            <div className=\"App\">\r\n                <Header title={'Project Management Board'} onShowForm={this.onShowForm}/>\r\n                <Board tables={tables} onShowForm={this.onShowForm} showForm={this.state.showForm}/>\r\n            </div>\r\n        )\r\n    };\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}